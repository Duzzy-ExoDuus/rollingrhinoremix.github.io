const Tt=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))i(a);new MutationObserver(a=>{for(const o of a)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function n(a){const o={};return a.integrity&&(o.integrity=a.integrity),a.referrerpolicy&&(o.referrerPolicy=a.referrerpolicy),a.crossorigin==="use-credentials"?o.credentials="include":a.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(a){if(a.ep)return;a.ep=!0;const o=n(a);fetch(a.href,o)}};Tt();const j={},Nt=(e,t)=>e===t,Ct=Symbol("solid-proxy"),Pt=Symbol("solid-track"),fe={equals:Nt};let At=st;const Z={},K=1,me=2,tt={owned:null,cleanups:null,context:null,owner:null},[Lt,Fi]=M(!1);var v=null;let le=null,y=null,ae=null,C=null,B=null,Ae=0;function oe(e,t){const n=y,i=v,a=e.length===0?tt:{owned:null,cleanups:null,context:null,owner:t||i};v=a,y=null;try{return ke(()=>e(()=>De(a)),!0)}finally{y=n,v=i}}function M(e,t){t=t?Object.assign({},fe,t):fe;const n={value:e,observers:null,observerSlots:null,pending:Z,comparator:t.equals||void 0},i=a=>(typeof a=="function"&&(a=a(n.pending!==Z?n.pending:n.value)),Ie(n,a));return[at.bind(n),i]}function It(e,t,n){const i=Ue(e,t,!0,K);he(i)}function D(e,t,n){const i=Ue(e,t,!1,K);he(i)}function S(e,t,n){n=n?Object.assign({},fe,n):fe;const i=Ue(e,t,!0,0);return i.pending=Z,i.observers=null,i.observerSlots=null,i.comparator=n.equals||void 0,he(i),at.bind(i)}function nt(e){if(ae)return e();let t;const n=ae=[];try{t=e()}finally{ae=null}return ke(()=>{for(let i=0;i<n.length;i+=1){const a=n[i];if(a.pending!==Z){const o=a.pending;a.pending=Z,Ie(a,o)}}},!1),t}function H(e){let t,n=y;return y=null,t=e(),y=n,t}function it(e,t,n){const i=Array.isArray(e);let a,o=n&&n.defer;return r=>{let s;if(i){s=Array(e.length);for(let h=0;h<e.length;h++)s[h]=e[h]()}else s=e();if(o){o=!1;return}const l=H(()=>t(s,a,r));return a=s,l}}function ye(e){return v===null||(v.cleanups===null?v.cleanups=[e]:v.cleanups.push(e)),e}function Ut(){return v}function Dt(e,t){const n=v;v=e;try{return ke(t,!0)}finally{v=n}}function Ot(e){const t=y,n=v;return Promise.resolve().then(()=>{y=t,v=n;let i;return nt(e),y=v=null,i?i.done:void 0})}function Wt(){return[Lt,Ot]}function Le(e){const t=Symbol("context");return{id:t,Provider:qt(t),defaultValue:e}}function de(e){let t;return(t=dt(v,e.id))!==void 0?t:e.defaultValue}function Et(e){const t=S(e);return S(()=>Ne(t()))}function at(){const e=le;if(this.sources&&(this.state||e)){const t=C;C=null,this.state===K||e?he(this):be(this),C=t}if(y){const t=this.observers?this.observers.length:0;y.sources?(y.sources.push(this),y.sourceSlots.push(t)):(y.sources=[this],y.sourceSlots=[t]),this.observers?(this.observers.push(y),this.observerSlots.push(y.sources.length-1)):(this.observers=[y],this.observerSlots=[y.sources.length-1])}return this.value}function Ie(e,t,n){if(ae)return e.pending===Z&&ae.push(e),e.pending=t,t;if(e.comparator&&e.comparator(e.value,t))return t;let i=!1;return e.value=t,e.observers&&e.observers.length&&ke(()=>{for(let a=0;a<e.observers.length;a+=1){const o=e.observers[a];i&&le.disposed.has(o),(i&&!o.tState||!i&&!o.state)&&(o.pure?C.push(o):B.push(o),o.observers&&rt(o)),i||(o.state=K)}if(C.length>1e6)throw C=[],new Error},!1),t}function he(e){if(!e.fn)return;De(e);const t=v,n=y,i=Ae;y=v=e,jt(e,e.value,i),y=n,v=t}function jt(e,t,n){let i;try{i=e.fn(t)}catch(a){lt(a)}(!e.updatedAt||e.updatedAt<=n)&&(e.observers&&e.observers.length?Ie(e,i):e.value=i,e.updatedAt=n)}function Ue(e,t,n,i=K,a){const o={fn:e,state:i,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:t,owner:v,context:null,pure:n};return v===null||v!==tt&&(v.owned?v.owned.push(o):v.owned=[o]),o}function ot(e){const t=le;if(e.state===0||t)return;if(e.state===me||t)return be(e);if(e.suspense&&H(e.suspense.inFallback))return e.suspense.effects.push(e);const n=[e];for(;(e=e.owner)&&(!e.updatedAt||e.updatedAt<Ae);)(e.state||t)&&n.push(e);for(let i=n.length-1;i>=0;i--)if(e=n[i],e.state===K||t)he(e);else if(e.state===me||t){const a=C;C=null,be(e,n[0]),C=a}}function ke(e,t){if(C)return e();let n=!1;t||(C=[]),B?n=!0:B=[],Ae++;try{const i=e();return Bt(n),i}catch(i){lt(i)}finally{C=null,n||(B=null)}}function Bt(e){C&&(st(C),C=null),!e&&(B.length?nt(()=>{At(B),B=null}):B=null)}function st(e){for(let t=0;t<e.length;t++)ot(e[t])}function be(e,t){const n=le;e.state=0;for(let i=0;i<e.sources.length;i+=1){const a=e.sources[i];a.sources&&(a.state===K||n?a!==t&&ot(a):(a.state===me||n)&&be(a,t))}}function rt(e){const t=le;for(let n=0;n<e.observers.length;n+=1){const i=e.observers[n];(!i.state||t)&&(i.state=me,i.pure?C.push(i):B.push(i),i.observers&&rt(i))}}function De(e){let t;if(e.sources)for(;e.sources.length;){const n=e.sources.pop(),i=e.sourceSlots.pop(),a=n.observers;if(a&&a.length){const o=a.pop(),r=n.observerSlots.pop();i<a.length&&(o.sourceSlots[r]=i,a[i]=o,n.observerSlots[i]=r)}}if(e.owned){for(t=0;t<e.owned.length;t++)De(e.owned[t]);e.owned=null}if(e.cleanups){for(t=0;t<e.cleanups.length;t++)e.cleanups[t]();e.cleanups=null}e.state=0,e.context=null}function lt(e){throw e}function dt(e,t){return e?e.context&&e.context[t]!==void 0?e.context[t]:dt(e.owner,t):void 0}function Ne(e){if(typeof e=="function"&&!e.length)return Ne(e());if(Array.isArray(e)){const t=[];for(let n=0;n<e.length;n++){const i=Ne(e[n]);Array.isArray(i)?t.push.apply(t,i):t.push(i)}return t}return e}function qt(e){return function(n){let i;return It(()=>i=H(()=>(v.context={[e]:n.value},Et(()=>n.children)))),i}}const Mt=Symbol("fallback");function Fe(e){for(let t=0;t<e.length;t++)e[t]()}function Ht(e,t,n={}){let i=[],a=[],o=[],r=0,s=t.length>1?[]:null;return ye(()=>Fe(o)),()=>{let l=e()||[],h,d;return l[Pt],H(()=>{let g=l.length,p,m,x,N,T,_,R,P,A;if(g===0)r!==0&&(Fe(o),o=[],i=[],a=[],r=0,s&&(s=[])),n.fallback&&(i=[Mt],a[0]=oe(te=>(o[0]=te,n.fallback())),r=1);else if(r===0){for(a=new Array(g),d=0;d<g;d++)i[d]=l[d],a[d]=oe(f);r=g}else{for(x=new Array(g),N=new Array(g),s&&(T=new Array(g)),_=0,R=Math.min(r,g);_<R&&i[_]===l[_];_++);for(R=r-1,P=g-1;R>=_&&P>=_&&i[R]===l[P];R--,P--)x[P]=a[R],N[P]=o[R],s&&(T[P]=s[R]);for(p=new Map,m=new Array(P+1),d=P;d>=_;d--)A=l[d],h=p.get(A),m[d]=h===void 0?-1:h,p.set(A,d);for(h=_;h<=R;h++)A=i[h],d=p.get(A),d!==void 0&&d!==-1?(x[d]=a[h],N[d]=o[h],s&&(T[d]=s[h]),d=m[d],p.set(A,d)):o[h]();for(d=_;d<g;d++)d in x?(a[d]=x[d],o[d]=N[d],s&&(s[d]=T[d],s[d](d))):a[d]=oe(f);a=a.slice(0,r=g),i=l.slice(0)}return a});function f(g){if(o[d]=g,s){const[p,m]=M(d);return s[d]=m,t(l[d],p)}return t(l[d])}}}function c(e,t){return H(()=>e(t||{}))}function pe(){return!0}const ht={get(e,t,n){return t===Ct?n:e.get(t)},has(e,t){return e.has(t)},set:pe,deleteProperty:pe,getOwnPropertyDescriptor(e,t){return{configurable:!0,enumerable:!0,get(){return e.get(t)},set:pe,deleteProperty:pe}},ownKeys(e){return e.keys()}};function Te(e){return(e=typeof e=="function"?e():e)==null?{}:e}function ze(...e){return new Proxy({get(t){for(let n=e.length-1;n>=0;n--){const i=Te(e[n])[t];if(i!==void 0)return i}},has(t){for(let n=e.length-1;n>=0;n--)if(t in Te(e[n]))return!0;return!1},keys(){const t=[];for(let n=0;n<e.length;n++)t.push(...Object.keys(Te(e[n])));return[...new Set(t)]}},ht)}function ct(e,...t){const n=new Set(t.flat()),i=Object.getOwnPropertyDescriptors(e),a=t.map(o=>{const r={};for(let s=0;s<o.length;s++){const l=o[s];Object.defineProperty(r,l,i[l]?i[l]:{get(){return e[l]},set(){return!0}})}return r});return a.push(new Proxy({get(o){return n.has(o)?void 0:e[o]},has(o){return n.has(o)?!1:o in e},keys(){return Object.keys(e).filter(o=>!n.has(o))}},ht)),a}let Ft=0;function zt(){const e=j.context;return e?`${e.id}${e.count++}`:`cl-${Ft++}`}function we(e){const t="fallback"in e&&{fallback:()=>e.fallback};return S(Ht(()=>e.each,e.children,t||void 0))}function ce(e){let t=!1;const n=S(()=>e.when,void 0,{equals:(i,a)=>t?i===a:!i==!a});return S(()=>{const i=n();if(i){const a=e.children;return(t=typeof a=="function"&&a.length>0)?H(()=>a(i)):a}return e.fallback})}const Gt=["allowfullscreen","async","autofocus","autoplay","checked","controls","default","disabled","formnovalidate","hidden","indeterminate","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","seamless","selected"],Kt=new Set(["className","value","readOnly","formNoValidate","isMap","noModule","playsInline",...Gt]),Yt=new Set(["innerHTML","textContent","innerText","children"]),Jt={className:"class",htmlFor:"for"},Ge={class:"className",formnovalidate:"formNoValidate",ismap:"isMap",nomodule:"noModule",playsinline:"playsInline",readonly:"readOnly"},Vt=new Set(["beforeinput","click","dblclick","contextmenu","focusin","focusout","input","keydown","keyup","mousedown","mousemove","mouseout","mouseover","mouseup","pointerdown","pointermove","pointerout","pointerover","pointerup","touchend","touchmove","touchstart"]),Xt={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"};function Qt(e,t,n){let i=n.length,a=t.length,o=i,r=0,s=0,l=t[a-1].nextSibling,h=null;for(;r<a||s<o;){if(t[r]===n[s]){r++,s++;continue}for(;t[a-1]===n[o-1];)a--,o--;if(a===r){const d=o<i?s?n[s-1].nextSibling:n[o-s]:l;for(;s<o;)e.insertBefore(n[s++],d)}else if(o===s)for(;r<a;)(!h||!h.has(t[r]))&&t[r].remove(),r++;else if(t[r]===n[o-1]&&n[s]===t[a-1]){const d=t[--a].nextSibling;e.insertBefore(n[s++],t[r++].nextSibling),e.insertBefore(n[--o],d),t[a]=n[o]}else{if(!h){h=new Map;let f=s;for(;f<o;)h.set(n[f],f++)}const d=h.get(t[r]);if(d!=null)if(s<d&&d<o){let f=r,g=1,p;for(;++f<a&&f<o&&!((p=h.get(t[f]))==null||p!==d+g);)g++;if(g>d-s){const m=t[r];for(;s<d;)e.insertBefore(n[s++],m)}else e.replaceChild(n[s++],t[r++])}else r++;else t[r++].remove()}}}const Ke="_$DX_DELEGATE";function Zt(e,t,n){let i;return oe(a=>{i=a,t===document?e():u(t,e(),t.firstChild?null:void 0,n)}),()=>{i(),t.textContent=""}}function k(e,t,n){const i=document.createElement("template");i.innerHTML=e;let a=i.content.firstChild;return n&&(a=a.firstChild),a}function Oe(e,t=window.document){const n=t[Ke]||(t[Ke]=new Set);for(let i=0,a=e.length;i<a;i++){const o=e[i];n.has(o)||(n.add(o),t.addEventListener(o,ln))}}function I(e,t,n){n==null?e.removeAttribute(t):e.setAttribute(t,n)}function en(e,t,n,i){i==null?e.removeAttributeNS(t,n):e.setAttributeNS(t,n,i)}function tn(e,t){t==null?e.removeAttribute("class"):e.className=t}function nn(e,t,n,i){i?Array.isArray(n)?(e[`$$${t}`]=n[0],e[`$$${t}Data`]=n[1]):e[`$$${t}`]=n:Array.isArray(n)?e.addEventListener(t,a=>n[0](n[1],a)):e.addEventListener(t,n)}function an(e,t,n={}){const i=Object.keys(t||{}),a=Object.keys(n);let o,r;for(o=0,r=a.length;o<r;o++){const s=a[o];!s||s==="undefined"||t[s]||(Ye(e,s,!1),delete n[s])}for(o=0,r=i.length;o<r;o++){const s=i[o],l=!!t[s];!s||s==="undefined"||n[s]===l||!l||(Ye(e,s,!0),n[s]=l)}return n}function on(e,t,n={}){const i=e.style,a=typeof n=="string";if(t==null&&a||typeof t=="string")return i.cssText=t;a&&(i.cssText=void 0,n={}),t||(t={});let o,r;for(r in n)t[r]==null&&i.removeProperty(r),delete n[r];for(r in t)o=t[r],o!==n[r]&&(i.setProperty(r,o),n[r]=o);return n}function Ce(e,t,n,i){typeof t=="function"?D(a=>Ve(e,t(),a,n,i)):Ve(e,t,void 0,n,i)}function u(e,t,n,i){if(n!==void 0&&!i&&(i=[]),typeof t!="function")return ee(e,t,i,n);D(a=>ee(e,t(),a,n),i)}function sn(e,t,n,i,a={},o=!1){t||(t={});for(const r in a)if(!(r in t)){if(r==="children")continue;Je(e,r,null,a[r],n,o)}for(const r in t){if(r==="children"){i||ee(e,t.children);continue}const s=t[r];a[r]=Je(e,r,s,a[r],n,o)}}function rn(e){return e.toLowerCase().replace(/-([a-z])/g,(t,n)=>n.toUpperCase())}function Ye(e,t,n){const i=t.trim().split(/\s+/);for(let a=0,o=i.length;a<o;a++)e.classList.toggle(i[a],n)}function Je(e,t,n,i,a,o){let r,s,l;if(t==="style")return on(e,n,i);if(t==="classList")return an(e,n,i);if(n===i)return i;if(t==="ref")o||n(e);else if(t.slice(0,3)==="on:")e.addEventListener(t.slice(3),n);else if(t.slice(0,10)==="oncapture:")e.addEventListener(t.slice(10),n,!0);else if(t.slice(0,2)==="on"){const h=t.slice(2).toLowerCase(),d=Vt.has(h);nn(e,h,n,d),d&&Oe([h])}else if((l=Yt.has(t))||!a&&(Ge[t]||(s=Kt.has(t)))||(r=e.nodeName.includes("-")))t==="class"||t==="className"?tn(e,n):r&&!s&&!l?e[rn(t)]=n:e[Ge[t]||t]=n;else{const h=a&&t.indexOf(":")>-1&&Xt[t.split(":")[0]];h?en(e,h,t,n):I(e,Jt[t]||t,n)}return n}function ln(e){const t=`$$${e.type}`;let n=e.composedPath&&e.composedPath()[0]||e.target;for(e.target!==n&&Object.defineProperty(e,"target",{configurable:!0,value:n}),Object.defineProperty(e,"currentTarget",{configurable:!0,get(){return n||document}}),j.registry&&!j.done&&(j.done=!0,document.querySelectorAll("[id^=pl-]").forEach(i=>i.remove()));n!==null;){const i=n[t];if(i&&!n.disabled){const a=n[`${t}Data`];if(a!==void 0?i(a,e):i(e),e.cancelBubble)return}n=n.host&&n.host!==n&&n.host instanceof Node?n.host:n.parentNode}}function Ve(e,t,n={},i,a){return t||(t={}),!a&&"children"in t&&D(()=>n.children=ee(e,t.children,n.children)),t.ref&&t.ref(e),D(()=>sn(e,t,i,!0,n,!0)),n}function ee(e,t,n,i,a){for(j.context&&!n&&(n=[...e.childNodes]);typeof n=="function";)n=n();if(t===n)return n;const o=typeof t,r=i!==void 0;if(e=r&&n[0]&&n[0].parentNode||e,o==="string"||o==="number"){if(j.context)return n;if(o==="number"&&(t=t.toString()),r){let s=n[0];s&&s.nodeType===3?s.data=t:s=document.createTextNode(t),n=V(e,n,i,s)}else n!==""&&typeof n=="string"?n=e.firstChild.data=t:n=e.textContent=t}else if(t==null||o==="boolean"){if(j.context)return n;n=V(e,n,i)}else{if(o==="function")return D(()=>{let s=t();for(;typeof s=="function";)s=s();n=ee(e,s,n,i)}),()=>n;if(Array.isArray(t)){const s=[];if(Pe(s,t,a))return D(()=>n=ee(e,s,n,i,!0)),()=>n;if(j.context){for(let l=0;l<s.length;l++)if(s[l].parentNode)return n=s}if(s.length===0){if(n=V(e,n,i),r)return n}else Array.isArray(n)?n.length===0?Xe(e,s,i):Qt(e,n,s):(n&&V(e),Xe(e,s));n=s}else if(t instanceof Node){if(j.context&&t.parentNode)return n=r?[t]:t;if(Array.isArray(n)){if(r)return n=V(e,n,i,t);V(e,n,null,t)}else n==null||n===""||!e.firstChild?e.appendChild(t):e.replaceChild(t,e.firstChild);n=t}}return n}function Pe(e,t,n){let i=!1;for(let a=0,o=t.length;a<o;a++){let r=t[a],s;if(r instanceof Node)e.push(r);else if(!(r==null||r===!0||r===!1))if(Array.isArray(r))i=Pe(e,r)||i;else if((s=typeof r)=="string")e.push(document.createTextNode(r));else if(s==="function")if(n){for(;typeof r=="function";)r=r();i=Pe(e,Array.isArray(r)?r:[r])||i}else e.push(r),i=!0;else e.push(document.createTextNode(r.toString()))}return i}function Xe(e,t,n){for(let i=0,a=t.length;i<a;i++)e.insertBefore(t[i],n)}function V(e,t,n,i){if(n===void 0)return e.textContent="";const a=i||document.createTextNode("");if(t.length){let o=!1;for(let r=t.length-1;r>=0;r--){const s=t[r];if(a!==s){const l=s.parentNode===e;!o&&!r?l?e.replaceChild(a,s):e.insertBefore(a,n):l&&s.remove()}else o=!0}}else e.insertBefore(a,n);return[a]}function dn(e,t,n){return e.addEventListener(t,n),()=>e.removeEventListener(t,n)}function hn([e,t],n,i){return[n?()=>n(e()):e,i?a=>t(i(a)):t]}function cn(e){try{return document.querySelector(e)}catch{return null}}function un(e,t){const n=cn(`a#${e}`);n?n.scrollIntoView():t&&window.scrollTo(0,0)}function pn(e,t,n,i){let a=!1;const o=s=>typeof s=="string"?{value:s}:s,r=hn(M(o(e()),{equals:(s,l)=>s.value===l.value}),void 0,s=>(!a&&t(s),s));return n&&ye(n((s=e())=>{a=!0,r[1](o(s)),a=!1})),{signal:r,utils:i}}function gn(e){if(e){if(Array.isArray(e))return{signal:e}}else return{signal:M({value:""})};return e}function fn(){return pn(()=>({value:window.location.pathname+window.location.search+window.location.hash,state:history.state}),({value:e,replace:t,scroll:n,state:i})=>{t?window.history.replaceState(i,"",e):window.history.pushState(i,"",e),un(window.location.hash.slice(1),n)},e=>dn(window,"popstate",()=>e()),{go:e=>window.history.go(e)})}const mn=/^(?:[a-z0-9]+:)?\/\//i,bn=/^\/+|\/+$/g;function se(e,t=!1){const n=e.replace(bn,"");return n?t||/^[?#]/.test(n)?n:"/"+n:""}function ge(e,t,n){if(mn.test(t))return;const i=se(e),a=n&&se(n);let o="";return!a||t.startsWith("/")?o=i:a.toLowerCase().indexOf(i.toLowerCase())!==0?o=i+a:o=a,(o||"/")+se(t,!o)}function wn(e,t){if(e==null)throw new Error(t);return e}function ut(e,t){return se(e).replace(/\/*(\*.*)?$/g,"")+se(t)}function vn(e){const t={};return e.searchParams.forEach((n,i)=>{t[i]=n}),t}function Q(e,t){return decodeURIComponent(t?e.replace(/\+/g," "):e)}function yn(e,t){const[n,i]=e.split("/*",2),a=n.split("/").filter(Boolean),o=a.length;return r=>{const s=r.split("/").filter(Boolean),l=s.length-o;if(l<0||l>0&&i===void 0&&!t)return null;const h={path:o?"":"/",params:{}};for(let d=0;d<o;d++){const f=a[d],g=s[d];if(f[0]===":")h.params[f.slice(1)]=g;else if(f.localeCompare(g,void 0,{sensitivity:"base"})!==0)return null;h.path+=`/${g}`}return i&&(h.params[i]=l?s.slice(-l).join("/"):""),h}}function kn(e){const[t,n]=e.pattern.split("/*",2),i=t.split("/").filter(Boolean);return i.reduce((a,o)=>a+(o.startsWith(":")?2:3),i.length-(n===void 0?0:1))}function pt(e){const t=new Map,n=Ut();return new Proxy({},{get(i,a){return t.has(a)||Dt(n,()=>t.set(a,S(()=>e()[a]))),t.get(a)()},getOwnPropertyDescriptor(){return{enumerable:!0,configurable:!0}},ownKeys(){return Reflect.ownKeys(e())}})}const xn=100,gt=Le(),xe=Le(),Re=()=>wn(de(gt),"Make sure your app is wrapped in a <Router />");let re;const We=()=>re||de(xe)||Re().base,Rn=e=>{const t=We();return S(()=>t.resolvePath(e()))},_n=e=>{const t=Re();return S(()=>{const n=e();return n!==void 0?t.renderPath(n):n})},$n=()=>Re().location;function Sn(e,t="",n){const{path:i,component:a,data:o,children:r}=e,s=!r||Array.isArray(r)&&!r.length,l=ut(t,i),h=s?l:l.split("/*",1)[0];return{originalPath:i,pattern:h,element:a?()=>c(a,{}):()=>{const{element:d}=e;return d===void 0&&n?c(n,{}):d},preload:e.component?a.preload:e.preload,data:o,matcher:yn(h,!s)}}function Tn(e,t=0){return{routes:e,score:kn(e[e.length-1])*1e4-t,matcher(n){const i=[];for(let a=e.length-1;a>=0;a--){const o=e[a],r=o.matcher(n);if(!r)return null;i.unshift({...r,route:o})}return i}}}function ft(e,t="",n,i=[],a=[]){const o=Array.isArray(e)?e:[e];for(let r=0,s=o.length;r<s;r++){const l=o[r];if(l&&typeof l=="object"&&l.hasOwnProperty("path")){const h=Sn(l,t,n);if(i.push(h),l.children)ft(l.children,h.pattern,n,i,a);else{const d=Tn([...i],a.length);a.push(d)}i.pop()}}return i.length?a:a.sort((r,s)=>s.score-r.score)}function Nn(e,t){for(let n=0,i=e.length;n<i;n++){const a=e[n].matcher(t);if(a)return a}return[]}function Cn(e,t){const n=new URL("http://sar"),i=S(l=>{const h=e();try{return new URL(h,n)}catch{return console.error(`Invalid path ${h}`),l}},n,{equals:(l,h)=>l.href===h.href}),a=S(()=>Q(i().pathname)),o=S(()=>Q(i().search,!0)),r=S(()=>Q(i().hash)),s=S(()=>"");return{get pathname(){return a()},get search(){return o()},get hash(){return r()},get state(){return t()},get key(){return s()},query:pt(it(o,()=>vn(i())))}}function Pn(e,t="",n,i){const{signal:[a,o],utils:r={}}=gn(e),s=r.parsePath||(w=>w),l=r.renderPath||(w=>w),h=ge("",t),d=void 0;if(h===void 0)throw new Error(`${h} is not a valid base path`);h&&!a().value&&o({value:h,replace:!0,scroll:!1});const[f,g]=Wt(),[p,m]=M(a().value),[x,N]=M(a().state),T=Cn(p,x),_=[],R={pattern:h,params:{},path:()=>h,outlet:()=>null,resolvePath(w){return ge(h,w)}};if(n)try{re=R,R.data=n({data:void 0,params:{},location:T,navigate:A(R)})}finally{re=void 0}function P(w,b,$){H(()=>{if(typeof b=="number"){b&&(r.go?r.go(b):console.warn("Router integration does not support relative routing"));return}const{replace:W,resolve:F,scroll:ne,state:E}={replace:!1,resolve:!0,scroll:!0,...$},L=F?w.resolvePath(b):ge("",b);if(L===void 0)throw new Error(`Path '${b}' is not a routable path`);if(_.length>=xn)throw new Error("Too many redirects");const q=p();if(L!==q||E!==x()){const z=_.push({value:q,replace:W,scroll:ne,state:x()});g(()=>{m(L),N(E)}).then(()=>{_.length===z&&te({value:L,state:E})})}})}function A(w){return w=w||de(xe)||R,(b,$)=>P(w,b,$)}function te(w){const b=_[0];b&&((w.value!==b.value||w.state!==b.state)&&o({...w,replace:b.replace,scroll:b.scroll}),_.length=0)}D(()=>{const{value:w,state:b}=a();H(()=>{w!==p()&&g(()=>{m(w),N(b)})})});{let w=function(b){if(b.defaultPrevented||b.button!==0||b.metaKey||b.altKey||b.ctrlKey||b.shiftKey)return;const $=b.composedPath().find(ie=>ie instanceof Node&&ie.nodeName.toUpperCase()==="A");if(!$)return;const W=$ instanceof SVGAElement,F=W?$.href.baseVal:$.href;if((W?$.target.baseVal:$.target)||!F&&!$.hasAttribute("state"))return;const E=($.getAttribute("rel")||"").split(/\s+/);if($.hasAttribute("download")||E&&E.includes("external"))return;const L=W?new URL(F,document.baseURI):new URL(F),q=Q(L.pathname);if(L.origin!==window.location.origin||h&&q&&!q.toLowerCase().startsWith(h.toLowerCase()))return;const z=s(q+Q(L.search,!0)+Q(L.hash)),ue=$.getAttribute("state");b.preventDefault(),P(R,z,{resolve:!1,replace:$.hasAttribute("replace"),scroll:!$.hasAttribute("noscroll"),state:ue&&JSON.parse(ue)})};var mt=w;document.addEventListener("click",w),ye(()=>document.removeEventListener("click",w))}return{base:R,out:d,location:T,isRouting:f,renderPath:l,parsePath:s,navigatorFactory:A}}function An(e,t,n,i){const{base:a,location:o,navigatorFactory:r}=e,{pattern:s,element:l,preload:h,data:d}=i().route,f=S(()=>i().path),g=pt(()=>i().params);h&&h();const p={parent:t,pattern:s,get child(){return n()},path:f,params:g,data:t.data,outlet:l,resolvePath(m){return ge(a.path(),m,f())}};if(d)try{re=p,p.data=d({data:t.data,params:g,location:o,navigate:r(p)})}finally{re=void 0}return p}const Ln=k("<a></a>"),In=e=>{const{source:t,url:n,base:i,data:a,out:o}=e,r=t||fn(),s=Pn(r,i,a);return c(gt.Provider,{value:s,get children(){return e.children}})},Un=e=>{const t=Re(),n=We(),i=S(()=>ft(e.children,ut(n.pattern,e.base||""),Dn)),a=S(()=>Nn(i(),t.location.pathname));t.out&&t.out.matches.push(a().map(({route:l,path:h,params:d})=>({originalPath:l.originalPath,pattern:l.pattern,path:h,params:d})));const o=[];let r;const s=S(it(a,(l,h,d)=>{let f=h&&l.length===h.length;const g=[];for(let p=0,m=l.length;p<m;p++){const x=h&&h[p],N=l[p];d&&x&&N.route.pattern===x.route.pattern?g[p]=d[p]:(f=!1,o[p]&&o[p](),oe(T=>{o[p]=T,g[p]=An(t,g[p-1]||n,()=>s()[p+1],()=>a()[p])}))}return o.splice(l.length).forEach(p=>p()),d&&f?d:(r=g[0],g)}));return c(ce,{get when(){return s()&&r},children:l=>c(xe.Provider,{value:l,get children(){return l.outlet()}})})},G=e=>e,Dn=()=>{const e=We();return c(ce,{get when(){return e.child},children:t=>c(xe.Provider,{value:t,get children(){return t.outlet()}})})};function On(e){const[,t]=ct(e,["children","to","href","state"]),n=_n(()=>e.to);return(()=>{const i=Ln.cloneNode(!0);return Ce(i,t,!1,!0),u(i,()=>e.children),D(a=>{const o=n()||e.href,r=JSON.stringify(e.state);return o!==a._v$&&I(i,"href",a._v$=o),r!==a._v$2&&I(i,"state",a._v$2=r),a},{_v$:void 0,_v$2:void 0}),i})()}function U(e){e=ze({inactiveClass:"inactive",activeClass:"active"},e);const[,t]=ct(e,["activeClass","inactiveClass","end"]),n=$n(),i=Rn(()=>e.href),a=S(()=>{const o=i();if(o===void 0)return!1;const r=o.split(/[?#]/,1)[0].toLowerCase(),s=n.pathname.toLowerCase();return e.end?r===s:s.startsWith(r)});return c(On,ze(t,{get to(){return i()},get classList(){return{[e.inactiveClass]:!a(),[e.activeClass]:a()}},get["aria-current"](){return a()?"page":void 0}}))}const Ee=Le(),Wn=["title","meta"],Qe=e=>e.tag+(e.name?`.${e.name}"`:""),En=e=>{const t=new Map;function n(a){if(a.ref)return a.ref;let o=document.querySelector(`[data-sm="${a.id}"]`);return o?(o.tagName.toLowerCase()!==a.tag&&(o.parentNode&&o.parentNode.removeChild(o),o=document.createElement(a.tag)),o.removeAttribute("data-sm")):o=document.createElement(a.tag),o}const i={addClientTag:a=>{let o=Qe(a);if(Wn.indexOf(a.tag)!==-1){t.has(o)||t.set(o,[]);let s=t.get(o),l=s.length;s=[...s,a],t.set(o,s);{let h=n(a);a.ref=h,Ce(h,()=>a.props);let d=null;for(var r=l-1;r>=0;r--)if(s[r]!=null){d=s[r];break}h.parentNode!=document.head&&document.head.appendChild(h),d&&d.ref&&document.head.removeChild(d.ref)}return l}{let s=n(a);a.ref=s,Ce(s,()=>a.props),s.parentNode!=document.head&&document.head.appendChild(s)}return-1},removeClientTag:(a,o)=>{const r=Qe(a);if(a.ref){const s=t.get(r);if(s){if(a.ref.parentNode){a.ref.parentNode.removeChild(a.ref);for(let l=o-1;l>=0;l--)s[l]!=null&&document.head.appendChild(s[l].ref)}s[o]=null,t.set(r,s)}else a.ref.parentNode&&a.ref.parentNode.removeChild(a.ref)}}};return c(Ee.Provider,{value:i,get children(){return e.children}})},jn=(e,t)=>{const n=zt();if(!de(Ee))throw new Error("<MetaProvider /> should be in the tree");return Bn({tag:e,props:t,id:n,get name(){return t.name||t.property}}),null};function Bn(e){const{addClientTag:t,removeClientTag:n,addServerTag:i}=de(Ee);D(()=>{{let a=t(e);ye(()=>n(e,a))}})}const Y=e=>jn("title",e);const qn=k('<div id="navlink-container"><a class="navlink inactive" href="https://github.com/rollingrhinoremix/docs/wiki" target="_blank">Wiki<img id="navlink-wiki-image" src="./assets/external-icon.svg"></a></div>'),Mn=k('<div id="navbar"></div>');function Hn(e){return(()=>{const t=Mn.cloneNode(!0);return u(t,c(ce,{get when(){return e.visible},get children(){const n=qn.cloneNode(!0),i=n.firstChild;return u(n,c(U,{class:"navlink",end:!0,href:"/",onclick:()=>{e.setInvisible()},children:"Home"}),i),u(n,c(U,{class:"navlink",end:!0,href:"/download",onclick:()=>{e.setInvisible()},children:"Download"}),i),u(n,c(U,{class:"navlink",end:!0,href:"/news",onclick:()=>{e.setInvisible()},children:"News"}),i),u(n,c(U,{class:"navlink",end:!0,href:"/donate",onclick:()=>{e.setInvisible()},children:"Donate"}),null),n}})),t})()}const Fn=k('<div id="hamburger-bg"></div>'),zn=k('<div id="hamburger-menu"><button id="hamburger-button"><div class="hamburger-line"></div><div class="hamburger-line"></div><div class="hamburger-line"></div></button></div>');function Gn(){const[e,t]=M(!1),n=()=>{document.getElementById("navlink-container").style.animation="navbar-outro 0.2s",document.getElementById("navlink-container").style.opacity=0,document.getElementById("hamburger-bg").style.animation="hamburger-bg-off 0.2s",document.getElementById("hamburger-bg").style.opacity=0,setTimeout(()=>{t(!1)},200)};return(()=>{const i=zn.cloneNode(!0),a=i.firstChild;return u(i,c(ce,{get when(){return e()},get children(){const o=Fn.cloneNode(!0);return o.$$click=()=>{e()?n():t(!0)},o}}),a),a.$$click=()=>{e()?n():t(!0)},u(i,c(Hn,{get visible(){return e()},setInvisible:n}),null),i})()}Oe(["click"]);const Kn=k('<div id="navbar" style="position: fixed;"><div id="navlink-container"><a class="navlink inactive" href="https://github.com/rollingrhinoremix/docs/wiki" target="_blank">Wiki<img id="navlink-wiki-image" src="./assets/external-icon.svg"></a></div></div>');function Yn(){return(()=>{const e=Kn.cloneNode(!0),t=e.firstChild,n=t.firstChild;return u(t,c(U,{class:"navlink",end:!0,href:"/",children:"Home"}),n),u(t,c(U,{class:"navlink",end:!0,href:"/download",children:"Download"}),n),u(t,c(U,{class:"navlink",end:!0,href:"/news",children:"News"}),n),u(t,c(U,{class:"navlink",end:!0,href:"/donate",children:"Donate"}),null),e})()}const Jn=k(`<div id="footer"><hr class="footer-hr"><p id="footer-par" style="text-align: center;">Made with love from all of our developers & contributors, and a large thank you to Martin Wimpress who's Rolling Rhino script has inspired the development of this distribution. <br>We would also like to thank Martin for his permission to use the name \u201CRolling Rhino Remix\u201D.<br><br><span id="footer-disclaimer">Ubuntu and Canonical are registered trademarks of Canonical Ltd. Rolling Rhino Remix is not affiliated with the Ubuntu Project. <br>Linux is the registered trademark of Linus Torvalds.</span></p><br><br><p id="footer-bottom-text-container"><span>&copy Rolling Rhino Remix</span><span id="footer-socials"><a href="https://discord.gg/JMu4SYRs2n" target="_blank"><img id="discord-logo" src="assets/Socials/Discord-Logo-White.svg" alt="Discord Contact"></a><a href="https://matrix.to/#/#rolling-rhino-remix:matrix.org" target="_blank"><img id="matrix-logo" src="assets/Socials/matrix-logo.svg" alt="Matrix Contact"></a><a href="https://www.youtube.com/channel/UCLUw8_PTMXLMJ-Hz6_7LNVQ" target="_blank"><img id="youtube-logo" src="assets/Socials/youtube-logo-white.svg" alt="Youtube Contact"></a></span><span><a class="footer-link" href="https://github.com/rollingrhinoremix" target="_blank">Github</a> | <!> | </span></p><div class="mini-spacer"></div></div>`);function J(){return(()=>{const e=Jn.cloneNode(!0),t=e.firstChild,n=t.nextSibling,i=n.nextSibling,a=i.nextSibling,o=a.nextSibling,r=o.firstChild,s=r.nextSibling,l=s.nextSibling,h=l.firstChild,d=h.nextSibling,f=d.nextSibling;return f.nextSibling,u(l,c(U,{class:"footer-link",end:!0,href:"/branding",children:"Branding"}),f),u(l,c(U,{class:"footer-link",end:!0,href:"/info",children:"Info"}),null),e})()}const Vn=k('<div id="branding-page" class="page-width"><div class="large-spacer"></div><h1 id="branding-page-title" class="gradient">Rolling Rhino Remix - Brand Guidelines</h1><hr class="title-hr"><div class="mini-spacer"></div><h3 id="branding-page-title2">Rolling Rhino Remix is <span class="gradient">YOUR </span>Linux operating system</h3><p id="branding-page-paragraph">Our set of Brand Guidelines exist so that Rolling Rhino Remix is communicated with the same precision we used to create it. <br>These guidelines and assets provide everything that builds the Rolling Rhino Remix brand. To help ensure the continued success of Rolling Rhino Remix, please use them as instructed. Our logos, wallpapers and assets are licensed under <a class="paragraph-link" href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank">CC BY-SA 4.0</a>. Rolling Rhino Remix itself is licensed under the GNU General Public License v3.0. <br><br>Color palette can be found <a class="paragraph-link" href="https://design.ubuntu.com/brand/colour-palette/" target="_blank">here</a>.</p><div id="branding-page-logos-section"><h3>Our logo</h3><p>There are a handful of variants of the Rolling Rhino Remix logo. We feel that it is integral to stick to the colour palette as much as possibile. The logo has a purple splotch behind the rhino, this is the same shade as the Ubuntu purple utilised in the gradient effect, separating the pieces.</p><div class="mini-spacer"></div><div id="branding-page-logos-images-container" class="card"><div class="mini-spacer"></div><img class="branding-logo" src="assets/BrandingPage/Logos/logoLight.png" alt="Logo variation"><img class="branding-logo" src="assets/BrandingPage/Logos/logoDark.png" alt="Logo variation"><img class="branding-logo" src="assets/BrandingPage/Logos/logoGray.png" alt="Logo variation" style="margin: 0;"><div class="mini-spacer"></div></div><div class="spacer"></div><div id="branding-page-logos-banners-container" class="card"><div class="mini-spacer"></div><img class="branding-banner-logo" src="assets/BrandingPage/Logos/logoBannerLight.png" alt="Banner logo variation"><img class="branding-banner-logo" src="assets/BrandingPage/Logos/logoBannerDark.png" alt="Banner logo variation" style="margin-bottom: 0;"><div class="mini-spacer"></div></div></div><div class="mini-spacer"></div><div id="branding-page-wallpapers-section"><h3>Our wallpapers</h3><p>The desktop wallpaper is one of the <b>first things</b> a new user will notice about their operating system. This is why we have designed two unique wallpapers to match our branding. The wallpapers will automatically change depending on whether the user is using light or dark mode.</p><div class="mini-spacer"></div><div id="branding-page-wallpapers-container" class="card"><div class="mini-spacer"></div><img class="branding-wallpaper" src="assets/BrandingPage/Wallpapers/wallpaperLight.png" alt="Wallpaper variation"><img class="branding-wallpaper" src="assets/BrandingPage/Wallpapers/wallpaperDark.png" alt="Wallpaper variation" style="margin-bottom: 0;"><div class="mini-spacer"></div></div></div><div class="spacer"></div></div>');var Xn="Rolling Rhino Remix | Branding";function Qn(){return(()=>{const e=Vn.cloneNode(!0),t=e.firstChild;return t.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling,u(e,c(Y,{children:Xn}),t),u(e,c(J,{}),null),e})()}const Zn=k('<div id="donate" class="page-width"><div class="large-spacer"></div><h1 id="donate-title" class="gradient">Rolling Rhino Remix - Donate</h1><hr class="title-hr"><div class="mini-spacer"></div><p id="donate-paragraph">Thank you for choosing to donate to the Rolling Rhino Remix project. Your support means a lot to everyone working on the development team. <br>By choosing to the donate to the project you are allowing us to continually improve the project and the infrastructure that holds it together. <br><br>You can read how all donations are handled by the project <a class="paragraph-link" href="https://docs.google.com/document/d/1zPkauRfWKxWTuOD5jY9Fo7q39PgPK0tEOD_D9zNXdoQ/edit" target="_blank">here.</a></p><div class="spacer"></div><div id="donate-arguments" class="card"><h2 class="gradient">Your donations will go to...</h2><div><p>\u2022 Infrastructure updates & maintenance</p><br><p>\u2022 Design choices</p><br><p>\u2022 Supporting contributors & developers</p></div></div><div class="mini-spacer"></div><p id="donate-button"><a href="https://liberapay.com/Rolling-Rhino-Remix/" target="_blank">Donate via Liberapay</a></p><div class="spacer"></div></div>');var ei="Rolling Rhino Remix | Donate";function ti(){return(()=>{const e=Zn.cloneNode(!0),t=e.firstChild;return t.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling,u(e,c(Y,{children:ei}),t),u(e,c(J,{}),null),e})()}const ni="2022.08.01",ii="3.6 GB",ai="5.18.15",oi="1e9a4b766f2e6379c28aa581a1875264b2377d580d50959e520bd37ceb82b3dc rolling-2022-08-01.iso",si={jovarkOS:"https://rollingrhino.jovarkos.org/rolling-2022-08-01.iso",googleDrive:"https://drive.google.com/file/d/1NxUO7dRsc0YeWgwiXeSLm1SOTIarLiYw/view?usp=sharing",meganz:"https://mega.nz/file/U2BUybqb#-s5pxMAtUZMfdKN79oI73Ai0dyqcVFxXrlEQgLxbfTE",mediafire:"https://www.mediafire.com/file/0pzvddjlqyxmhxk/rolling-2022-08-01.iso/file",archiveorg:"https://archive.org/details/rolling-2022-08-01"},ri="/news#2022-08-01";var O={version:ni,ISOSize:ii,kernel:ai,checksum:oi,mirrors:si,releaseAnnouncement:ri};const li=k('<div id="download" class="page-width"><div class="large-spacer"></div><h1 id="download-title" class="gradient">Rolling Rhino Remix - Download</h1><hr class="title-hr"><div class="spacer"></div><div class="card"><div class="mini-spacer"></div><h1 class="download-section1-title">Release Information</h1><p class="download-section1-text">The image can be burned to a CD, mounted as an ISO file, or be directly written to a USB stick using a utility like <span class="code">dd</span>. It is intended for new installations only; an existing Rolling Rhino system can always be updated with <span class="code">rhino-update</span>.</p><p class="download-section1-text"><b>Current release: </b><br><a class="paragraph-link">Release Announcement</a><br><b>ISO Size: </b><br><b>Included Kernel: </b><br><a class="paragraph-link" href="https://github.com/rollingrhinoremix/docs/wiki/Installation-guide" target="_blank">Installation Guide</a><br><b style="word-wrap: break-word;">Checksum (Sha256sum): </b></p><br><h1 class="download-section1-title">Download Mirrors</h1><div class="download-section1-text"><p><b>JovarkOS:</b><br><a class="paragraph-link" target="_blank">Download rolling-<!>.iso</a> </p><p><b>Google Drive:</b><br><a class="paragraph-link" target="_blank">Download rolling-<!>.iso</a> </p><p><b>Mega.nz:</b><br><a class="paragraph-link" target="_blank">Download rolling-<!>.iso</a></p><p><b>Mediafire:</b><br><a class="paragraph-link" target="_blank">Download rolling-<!>.iso</a></p><p><b>Archive.org:</b><br><a class="paragraph-link" target="_blank">Download rolling-<!>.iso</a></p></div><div class="mini-spacer"></div></div><div class="spacer"></div></div>');var di="Rolling Rhino Remix | Download";const X=O.version,hi=O.ISOSize,ci=O.kernel,ui=O.checksum,pi=O.mirrors.jovarkOS,gi=O.mirrors.googleDrive,fi=O.mirrors.meganz,mi=O.mirrors.mediafire,bi=O.mirrors.archiveorg;function wi(){return(()=>{const e=li.cloneNode(!0),t=e.firstChild,n=t.nextSibling,i=n.nextSibling,a=i.nextSibling,o=a.nextSibling,r=o.firstChild,s=r.nextSibling,l=s.nextSibling,h=l.nextSibling,d=h.firstChild;d.firstChild;const f=d.nextSibling,g=f.nextSibling,p=g.nextSibling,m=p.nextSibling;m.firstChild;const x=m.nextSibling,N=x.nextSibling;N.firstChild;const T=N.nextSibling,_=T.nextSibling,R=_.nextSibling,P=R.nextSibling;P.firstChild;const A=h.nextSibling,te=A.nextSibling,mt=te.nextSibling,w=mt.firstChild,b=w.firstChild,$=b.nextSibling,W=$.nextSibling,F=W.firstChild,ne=F.nextSibling;ne.nextSibling;const E=w.nextSibling,L=E.firstChild,q=L.nextSibling,z=q.nextSibling,ue=z.firstChild,ie=ue.nextSibling;ie.nextSibling;const je=E.nextSibling,bt=je.firstChild,wt=bt.nextSibling,_e=wt.nextSibling,vt=_e.firstChild,Be=vt.nextSibling;Be.nextSibling;const qe=je.nextSibling,yt=qe.firstChild,kt=yt.nextSibling,$e=kt.nextSibling,xt=$e.firstChild,Me=xt.nextSibling;Me.nextSibling;const Rt=qe.nextSibling,_t=Rt.firstChild,$t=_t.nextSibling,Se=$t.nextSibling,St=Se.firstChild,He=St.nextSibling;return He.nextSibling,o.nextSibling,u(e,c(Y,{children:di}),t),u(d,X,null),u(m,hi,null),u(N,ci,null),u(P,ui,null),I(W,"href",pi),u(W,()=>X.replaceAll(".","-"),ne),I(z,"href",gi),u(z,()=>X.replaceAll(".","-"),ie),I(_e,"href",fi),u(_e,()=>X.replaceAll(".","-"),Be),I($e,"href",mi),u($e,()=>X.replaceAll(".","-"),Me),I(Se,"href",bi),u(Se,()=>X.replaceAll(".","-"),He),u(e,c(J,{}),null),D(()=>I(g,"href",O.releaseAnnouncement)),e})()}const vi=k(`<div id="home-page" class="page-width"><div class="large-spacer"></div><h1 class="home-title gradient">Rolling Rhino Remix</h1><hr class="title-hr"><div class="mini-spacer"></div><img id="home-laptop-image" src="assets/HomePage/laptop.png" alt="Laptop Image"><h1 class="home-title gradient">Ubuntu just got rolling.</h1><div class="mini-spacer"></div><div class="card"><div class="mini-spacer"></div><h1 id="home-section1-header">So what is it?</h1><div id="home-section1-contents"><p id="home-section1-paragraph" style="text-align: left;">Rolling Rhino Remix is an unofficial Ubuntu flavour which converts the Ubuntu operating system into a rolling release Linux distribution by tracking the devel series. <br>A rolling release distribution is a Linux distribution which receives continuous package updates, and as such there are no major updates (unlike Ubuntu's current release model where there is clear progression between versions). A rolling release model offers new and experienced users a new way to utilise their desktop PC, without the hassle of major upgrades.</p><img id="home-image1" src="assets/HomePage/section1.png"></div><div class="mini-spacer"></div></div><div id="home-section2"><div class="mini-spacer"></div><h1 id="home-section2-header" class="gradient">Why use Rolling Rhino Remix?</h1><p id="home-section2-paragraph">If you prefer the easy-to-use nature of Ubuntu but prefer the style of a rolling release from other distributions such as Arch Linux then Rolling Rhino Remix might be for you! <br>We work hard to ensure that Rolling Rhino Remix has the best possible user experience. We have created tools and additional repositories to ensure that Ubuntu works smoothly as a Rolling Release distribution.</p><div class="spacer"></div><div id="home-section2-grid"><div class="home-section2-grid-object"><img src="assets/HomePage/EasyInstallation.png"><p>Rolling Rhino Remix offers a no-frills, slightly modified version of Ubuntu's Ubiquity installer. This graphical installer makes the installation of Rolling Rhino Remix simple, easy and intutive and offers different methods of insallation such as our minimal option which comes with no desktop environment or extra packages, allowing you to customise your system from the ground up.</p></div><div class="home-section2-grid-object home-section2-end-line-grid-object"><img src="assets/HomePage/Minimal.png"><p>Our minimal installation option comes with no un-necessary packages and no Desktop Environment out of the box, allowing for you to customise your Rolling Rhino Remix system the way that you want it. Our quality of life tools such as rhino-deinst provide an easy, TUI method to install a desktop environment.</p></div><div class="home-section2-grid-object home-section2-bottom-row-grid-object"><img src="assets/HomePage/rhino.png"><p>Rolling Rhino Remix provides many different quality of life and command-line utilities to improve the user experience of the Operating System. Many of these utilities were created by the Rolling Rhino Remix team specifically for the distribution. You can find information about each of the utilities on our <a class="paragraph-link" href="https://github.com/rollingrhinoremix/docs/wiki" target="_blank">Wiki</a>. </p></div><div class="home-section2-grid-object home-section2-end-line-grid-object home-section2-bottom-row-grid-object" style="margin-bottom: 0;"><img src="assets/HomePage/partners.png"><p>Rolling Rhino Remix has partnered with two large open source projects, Pacstall and Nala. Pacstall is an AUR-like package manager that brings the experience of the Arch User repository to Rolling Rhino Remix. Nala is a <span class="code">libapt-pkg</span> frontend which improves the experience of the apt package manager with better output, parallel downloads and transaction history.</p></div></div></div><div class="mini-spacer"></div><div class="card"><div class="home-section3-argument"><h1 class="gradient">Open Source</h1><p>We are entirely dedicated to Free and Open Source Software. All of our utilities are licensed under the GNU General Public License (v3). Rolling Rhino Remix is based on Ubuntu, which is also a free and open source Linux distribution. <br><br>Rolling Rhino Remix joined the Open Inventions Network in April 2022. The Open Invention Network is a patent non-agression community that supports the freedom of Linux and Open Source software, and helps reduce the risks of patent risks. All members of the Open Invention Network sign the same agreement to cross license their Linux System patents royalty free. The Open Invention Network owns over 2.7 million patents & applications and all members also gain access to the Open Invention Network's portfolio of 350 intellectual property assets. </p></div><div class="home-section3-argument"><h1 class="gradient">Unique Tools</h1><p>We have created our home-grown utility called Rhino. Rhino has three commands, <span class="code">rhino-update</span>, <span class="code">rhino-deinst</span> and <span class="code">rhino-config</span>.<br><br><span class="code">rhino-update</span> is our extensible update utility, which will ensure that the system is updated smoothly. Due to the extensibility of it, you can use <span class="code">rhino-config</span> to configure the updates you can receive. You are able to use this tool for an ever-increasing list of features, such as enabling the installation and upgrades of the latest Linux kernel, removing and replacing snapd with Flatpaks and enabling Pacstall on your system.<br><br><a class="paragraph-link" href="https://pacstall.dev/" target="_blank">Pacstall</a> is an AUR-like package manager for Ubuntu and Ubuntu-based systems, and we have worked closely with the Pacstall developers to integrate it into our distribution. Pacstall brings the experience of the Arch User Repository directly to Ubuntu and Ubuntu-based systems with an ever-growing number of user-maintained packages.<br><br><a class="paragraph-link" href="https://gitlab.com/volian/nala" target="_blank">Nala</a> is a libapt-pkg front-end which improves the core functionality of apt. We have (once again) worked closely with the developers of Nala to integrate it into Rolling Rhino Remix. Nala provides functionality such as transaction history, parallel downloads and better output formatting. Nala makes apt much more user-friendly as a result of this. Please read our <a class="paragraph-link" href="https://github.com/rollingrhinoremix/docs/wiki/nala" target="_blank">Nala documentation</a> to understand how to utilise it.<br><br>We have our own Terminal User Interface (TUI) utility to install desktop environments. This makes the installation of desktop environments on a minimal installation of Rolling Rhino Remix significantly easier. All that is required is to run <span class="code">rhino-deinst</span>, select the Desktop Environments or Window Managers you wish to install and the utility will do the rest. Deinst will also automatically install and enable the required Display Manager.</p></div><div class="home-section3-argument"><h1 class="gradient">Thorough Documentation</h1><p>We hope to provide the best documentation so that you know how to utilise the distribution as it was intended. By providing a community-maintained Wiki, we hope to provide users with the information necessary for them to understand how to utilise our utilities as well as fix and troubleshoot any common issues that have been found within the distribution. You can view our wiki <a class="paragraph-link" href="https://github.com/rollingrhinoremix/docs/wiki" target="_blank">here.</a></p></div></div><div class="spacer"></div></div>`);var yi="Rolling Rhino Remix | Home";function ki(){return(()=>{const e=vi.cloneNode(!0),t=e.firstChild;return t.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling,u(e,c(Y,{children:yi}),t),u(e,c(J,{}),null),e})()}const xi=[{name:"Chadano",description:"Current Project Lead and founder of Rolling Rhino Remix. Coordinates the development within the project as well as takes user feedback and works on updates.",ghLink:"https://github.com/MrBeeBenson"},{name:"Plasma",description:"Deputy project lead, also in charge of <span class='code'>rhino-deinst</span>.",ghLink:"https://github.com/Henryws"},{name:"Wizard28",description:"In charge of <span class='code'>rhino-config</span>, <span class='code'>rhino-system</span> and related <span class='code'>rhino-update</span> patches.",ghLink:"https://github.com/wizard-28"},{name:"Notmax6677",description:"The lead web developer for the current build of Rolling Rhino Remix's website.",ghLink:"https://github.com/notmax6677"}],Ri=["TheOceanBreeze","angelofallars","ico277","nv35","Tricantivu"];var Ze={coreContributors:xi,spelling:Ri};const _i=k(`<div id="info" class="page-width"><div class="large-spacer"></div><h1 id="info-title" class="gradient">Rolling Rhino Remix - Information</h1><hr class="title-hr"><div class="spacer"></div><div id="info-contributors-section" class="card"><h1 class="info-contributors-title">Core Contributors</h1><div id="info-contributors-container"><div class="mini-spacer"></div><a id="info-other-contributors-link" href="google.com" target="_blank">See other contributors on our Github repository.</a><div class="mini-spacer"></div><h1 class="info-contributors-title">Fixed spelling mistakes & typos</h1></div><div class="mini-spacer"></div></div><div class="spacer"></div><div id="info-press-section" class="card"><h2 id="info-press-title">Press</h2><p id="info-press-text">This is a collection of press, posts, and articles regarding <b>Rolling Rhino Remix.</b> <br><br><span id="info-press-text-link-container"><span class="info-press-link">\u2022 <a class="paragraph-link" href="https://www.theregister.com/2022/03/29/rolling_release_ubuntu_remix/" target="_blank">The Register</a></span><br><span>\u2022 <a class="paragraph-link" href="https://www.zdnet.com/article/rolling-rhino-delivers-a-rolling-release-take-on-ubuntu-desktop/" target="_blank">ZDNet</a></span><br><span>\u2022 <a class="paragraph-link" href="https://fossbytes.com/ubuntu-rolling-release-rolling-rhino/" target="_blank">FOSSBYTES</a></span><br><span>\u2022 <a class="paragraph-link" href="https://retrology.net/rolling-rhino-converts-ubuntu-into-a-rolling-release/" target="_blank">Retrology</a></span><br><span>\u2022 <a class="paragraph-link" href="https://tuxdigital.com/podcasts/this-week-in-linux/twil-192/" target="_blank">Tuxdigital's "This Week in Linux 192"</a></span><br><span>\u2022 <a class="paragraph-link" href="http://lxer.com/module/newswire/view/313425/index.html" target="_blank">LXer</a></span><br><span>\u2022 <a class="paragraph-link" href="https://fullcirclemagazine.org/podcast/full-circle-weekly-news-256/" target="_blank">Full Circle Weekly News #256</a></span></span></p></div><div class="spacer"></div></div>`),$i=k('<p class="info-contributor"><a target="_blank"></a><br> </p>'),Si=k('<p class="info-spelling-contributor"></p>');var Ti="Rolling Rhino Remix | Info";function Ni(){return(()=>{const e=_i.cloneNode(!0),t=e.firstChild,n=t.nextSibling,i=n.nextSibling,a=i.nextSibling,o=a.nextSibling,r=o.firstChild,s=r.nextSibling,l=s.firstChild;return l.nextSibling.nextSibling.nextSibling,o.nextSibling.nextSibling.nextSibling,u(e,c(Y,{children:Ti}),t),u(s,c(we,{get each(){return Ze.coreContributors},children:p=>(()=>{const m=$i.cloneNode(!0),x=m.firstChild;return x.nextSibling.nextSibling,u(x,()=>p.name),u(m,()=>{var T=document.createElement("span");return T.innerHTML=p.description,T},null),D(()=>I(x,"href",p.ghLink)),m})()}),l),u(s,c(we,{get each(){return Ze.spelling},children:p=>(()=>{const m=Si.cloneNode(!0);return u(m,p),m})()}),null),u(e,c(J,{}),null),e})()}const Ci=k('<div class="news-post"><div class="news-post-banner"></div><h1 class="news-post-title gradient"></h1><h4 class="news-post-date"></h4><button class="news-post-share-button"><img src="./assets/share-icon.svg" alt="share" title="Share Post"></button></div>'),et=k('<p class="news-post-paragraph-text"></p>'),Pi=k("<div><h2></h2></div>");function Ai(e){const t=e.propID,n=e.date,i=e.title,a=e.paragraph,o=e.sections,r=()=>{navigator.clipboard.writeText(window.location.hostname+"/news#"+t),e.setShowingPopup(!0),setTimeout(()=>{e.setShowingPopup(!1)},1e3)};return(()=>{const s=Ci.cloneNode(!0),l=s.firstChild,h=l.nextSibling,d=h.nextSibling,f=d.nextSibling;return I(s,"id",t),u(h,i),u(d,n),u(s,()=>{var g=new DOMParser().parseFromString(a,"text/html"),p=Array.from(g.body.childNodes);return(()=>{const m=et.cloneNode(!0);return u(m,p),m})()},f),u(s,c(we,{each:o,children:g=>(()=>{const p=Pi.cloneNode(!0),m=p.firstChild;return u(m,()=>g.title),u(p,()=>{var x=new DOMParser().parseFromString(g.paragraph,"text/html"),N=Array.from(x.body.childNodes);return(()=>{const T=et.cloneNode(!0);return u(T,N),T})()},null),p})()}),f),f.$$click=r,s})()}Oe(["click"]);const Li=k('<div id="news-post-share-popup"><h3>Link copied to clipboard.</h3></div>');function Ii(){return Li.cloneNode(!0)}var Ui=[{id:"community-distro",title:"Community-led innovation + Development underway for 2022.09.01",date:"August 13th, 2022",paragraph:"The Rolling Rhino Remix team has been hard at work to begin the development of the next disk image release. Besides that, the development team has also been working on providing more power to the Rolling Rhino Remix community.",sections:[{title:"Becoming a community distribution",paragraph:"We wanted to become a distribution created by the community, for the community and so we have implemented a number of changes for this. Rolling Rhino Remix has evolved into a fundamentally different distribution than what was envisioned. There have been countless times when the community has submitted pull requests which completely change the distribution for the better. We are relying on contributors more than ever now. With the personal lives of developers having become increasingly busy, we need your help. To do this, the community, along with the former development team will now be leading the development of the distribution.<br><br>The role of official developers will be transformed into <q>Core Contributors</q>, and they shall receive read/write access to repositories so that they are able to merge and submit pull requests to their respective repositories. Any developer with an exceptional record of active commits or innovation can become a trusted contributor. Chadano will remain as the Project Lead behind the distribution to help guide the development of the next release as well as utility development. Upon the resignation of any Project Lead, the wider community may vote on which trusted contributor should assume the position.<br><br><i>We need help from the community now more than ever to help see the project succeed and meet release deadlines, and we need <b>your</b> help to do it.</i>"},{title:"2022.09.01 development begins",paragraph:"The development cycle of Rolling Rhino Remix kicks off once again with the development officially beginning on disk image 2022.09.01. The changes in this disk image release will be minimal, with all package and utility versions being shipped at their latest version by default as well as the 5.19.x kernel being pre-packaged in the distribution.<br><br>We aim to release a separate Windows Subsystem for Linux binary for Windows developers to be able to take full advantage of the Rolling Rhino Remix utilities and packages within their Windows machines. The installation for this will be detailed on our Wiki once released."}]},{id:"2022-08-01",title:"Release 2022.08.01",date:"August 1st, 2022",paragraph:"It's been a month since the last disk image release of Rolling Rhino Remix. The development team has worked hard to squash issues in this release as well as improve the quality of life for the user.<br><br>",sections:[{title:"What's new?",paragraph:"\u2022 Rolling Rhino Remix 2022.08.01 has shipped with the 5.18.15 kernel by default.<br>\u2022 <span class='code'>rhino-init</span> has been entirely deprecated for 2022.08.01 and future versions.<br>\u2022 All packages have been upgraded to their latest version<br>\u2022 Bug fixes.<br><br>If you are using an already existing installation of Rolling Rhino Remix then you will be able to upgrade to the latest version with <span class='code'>rhino-update</span> if you do not have these changes already.<br><br>If you wish to download Rolling Rhino Remix with a fresh disk image then you can download it <a href='/download' target='_blank'>here</a>."}]},{id:"development-update-6",title:"Development underway for 2022.08.01 + Utility updates",date:"July 20th, 2022",paragraph:"The Rolling Rhino Remix development team has begun development on 2022.08.01 which will see small-scale changes. The largest change is the deprecation of <span class='code'>rhino-init</span>, with all required directories and files being created on disk image generation. 2022.08.01 will also see the upgrades of packages and kernel version.",sections:[{title:"rhino-update v1.6 + rhino-config v3.1.0",paragraph:"<span class='code'>rhino-update</span> has seen many small-scale changes accumulate over-time through development pull requests, so they've now been compiled into a tagged release."},{title:"What's new?",paragraph:"\u2022 Use type -P to check if flatpak and snap are installed.<br>\u2022 Fix typo in the .deb URL<br>\u2022 Updated kernel to 5.18.12<br>\u2022 Add support for installing even more kernels.<br><br><span class='code'>rhino-config</span> saw the upgrades of dependencies as well as the ability to add more kernels, which is then handled via <span class='code'>rhino-update</span>.<br><br>To receive the latest upgrades to your system, please run <span class='code'>rhino-update</span>."}]},{id:"2022-07-01",title:"Release 2022.07.01",date:"July 3rd, 2022",paragraph:"It's been over a month since the last disk image release of Rolling Rhino Remix has released. We recently shifted our release model to just compile the latest updates to the distribution and release them in monthly disk images. This change was necessary as Rolling Rhino Remix reached a natural stagnation in its development where core distribution features were not required to be developed anymore.",sections:[{title:"What's new?",paragraph:"\u2022 Rolling Rhino Remix 2022.07.01 is the first disk image to have the latest Linux kernel packaged and pre-compiled for the distribution. Linux kernel 5.18.8 is now included by default.<br>\u2022 The latest releases for our <span class='code'>rhino-config</span> and <span class='code'>rhino-deinst</span> utility have been packaged in this monthly disk image release.<br>\u2022 Nala has now been included in the distribution by default. Nala is a libapt-pkg front-end which has amazing features such as Parallel downloads, better output formatting, transaction history and more.<br><br>If you are using an already existing installation of Rolling Rhino Remix then you will be able to upgrade to the latest version with <span class='code'>rhino-update</span> if you do not have these changes already.<br><br>If you wish to download Rolling Rhino Remix with a fresh disk image then you can download it <a href='/download'>here</a>.<br><br>This version of Rolling Rhino Remix was released two days later than expected. The reason for this was due to time constraints in our personal lives such as College, School and Work. One major bug presented itself in our testing stage on the 30th of June and so we had to fix that as well. We apologise for the late release of this disk image."}]},{id:"rhino-update-150",title:"rhino-update v1.5 - Nala integration",date:"Unrecorded Date",paragraph:"The Rolling Rhino Remix project has worked closely with the lead developer of the <a href='https://gitlab.com/volian/nala' target='_blank'>Nala</a> project, Volitank.<br>We have partnered up with them to bring Nala to the distribution and utilise it within <span class='code'>rhino-update</span>.<br><br>Nala is a front-end for <span class='code'>libapt-pkg</span>. It has many great features that make it a great alternative to utilising the apt command itself, while keeping the same core functionality of downloading and installing .deb packaged from repositories. Especially for newer users it can be hard to understand what apt is trying to do when installing or upgrading. Outside of pretty formatting, the number 1 reason to use Nala over apt is parallel downloads. Nala is much faster at apt when it comes to updating repositories as well as installing or upgrading packages. The formatting makes it much more human readable.<br><br>So, how was it integrated? Rolling Rhino Remix now has Nala preinstalled on all systems once an update has occured. The next disk image release, 2022.07.01, will also contain the Nala package preinstalled. It is recommended to install and remove packages via Nala instead of apt now. To update your packages, it is still recommended to utilise <span class='code'>rhino-update</span>, which will now use Nala for package upgrades.",sections:[]},{id:"rhino-config-v300",title:"rhino-config v3.0 & rhino-update v1.4 released!",date:"Unrecorded Date",paragraph:"The development team has been hard at work for two big updates to Rolling Rhino Remix utilities, as <span class='code'>rhino-config</span> gets the long awaited update that allows for you to switch to alternate Linux-based Kernels such as xanmod and liquorix. Our update utility, <span class='code'>rhino-update</span> also receives many quality of life changes.",sections:[{title:"rhino-config v3.0",paragraph:"<b>What's changed?</b><br><br>\u2022 The mainline flag has been removed from rhino-config, with the latest Linux kernel, delivered straight from the Ubuntu mainline repositories, being installed by default on an update.<br>\u2022 A new sub-command, <span class='code'>rhino-config switch-kernel</span>, allows for the ability to switch to an alternate Linux kernel.<br><br>It is recommended you read the <a href='https://github.com/rollingrhinoremix/docs/wiki/rhino-config' target='_blank'>rhino-config Wiki page</a> so you have information on how to utilise the new sub-commands.<br>\u2022 It is important to note that the Wiki may take a short while to be updated."},{title:"rhino-update v1.4",paragraph:"<b>What's changed?</b><br><br>\u2022 If Flatpak is installed on the system, Flatpak applications will be updated automatically via <span class='code'>rhino-update</span>.<br>\u2022 A bug fix to not update Pacstall as root has been applied.<br>\u2022 A minor change to use the latest tagged release automatically for rhino utilities.<br>\u2022 A bug fix to not rely on rhino-config configuration files to check if snapd is installed to handle Snap application updates.<br>\u2022 System files such as /etc/os-release are updated by rhino-update. Standards are also now adhered to.<br>\u2022 The ability to install alternate kernels has been provided. This feature runs in parallel to <span class='code'>rhino-config</span> v3.0.<br>\u2022 Kernel files are now downloaded simultaneously, which will make upgrade times significantly faster.<br><br>The majority of these changes happened in incremental steps, and users will have received most of these changes already, but they are now compiled into one release.<br><br>Nevertheless, some new features such as <span class='code'>rhino-config v3.0</span>, the ability to install alternate kernels, as well as simultaneously downloading kernel files have just been released. To receive the latest upgrades to your system, please run <span class='code'>rhino-update</span>."}]},{id:"development-update-5",title:"Development underway for 2022.07.01 + New updates coming soon",date:"Unrecorded Date",paragraph:"Development has begun for the release of our next disk image, which will now be released on July 1st. With most of the necessary major changes happening to the distribution, the release of new disk images will focus more on polishing and refining the user experience from out of the box, as well as compiling the latest changes provided by our team and within the Ubuntu repositories. The big change to note for this release will be that the latest Linux kernel, straight from the Ubuntu mainline PPA, will be used as the default Linux kernel from now on, rather than the default Ubuntu kernel, which can sometimes lag behind in versions. As a result of this, the mainline option is being removed in <span class='code'>rhino-config</span>.",sections:[{title:"Utility updates",paragraph:"<span class='code'>rhino-config</span> is getting a refresh with v3.0.0 which is set to release soon. This version will see the aforementioned removal of the mainline flag being removed from the utility. New changes will also include a brand new subcommand called switch-kernel, which will allow you to choose alternate Linux kernels to utilise such as the xanmod and liquorix kernel.<br><br><span class='code'>rhino-deinst</span> has seen various pull requests, which will be compiled into the next release. These changes are relatively minor, with some reorganisation and bug fixes for LXDE."},{title:"Website updates",paragraph:"The website is going to get a bold new look, with our former rhino-update maintainer, Billy G, taking over the website development. The website will now feature a more modern look inspired by <a href='https://www.gnome.org/' target='_blank'>gnome.org</a>, and will now utilise a dark mode colour pallete."}]},{id:"2022-05-28",title:"Release 2022.05.28 + more",date:"May 28th, 2022",paragraph:"After over three weeks of development we are proud to release 2022.05.28. This release has been our most ambitious release yet, with the launch of a brand-new utility, a minimal installation mode and more new features.",sections:[{title:"What's new?",paragraph:"\u2022 New minimal installation option is available in the Ubuntu Ubiquity Installer.<br>\u2022 Our new utility, <span class='code'>rhino-deinst</span>, which installs Desktop Environments and Window Managers easily through a Terminal User Interface has been included in the distribution by default.<br>\u2022 Our disk images are now built with our brand new <span class='code'>RRR-builder</span> build system. This uses ZSTD compression which saves space.<br>\u2022 Our brand-new wallpapers have been included into the system by default. These wallpapers will automatically change between light and dark depending on whether you have set your system to use light or dark mode.<br>\u2022 In addition, these wallpapers can be selected from gnome control center or the settings app. The background will change depending on if dark mode is enabled.<br><br>Originally our minimal installation option was planned to be a seperate disk image, however we decided through its development that it would be best to include it in the standard Rolling Rhino Remix disk image, and modify Ubiquity's currently existing Minimal installation option to provide a minimalistic setup with no preinstalled Desktop Environment or extra packages.<br><br>If you are using an already existing installation of Rolling Rhino Remix then you will be able to upgrade to the latest version with <span class='code'>rhino-update</span>.<br><br>If you wish to download Rolling Rhino Remix with a fresh disk image then you can download it <a href='/download' target='_blank'>here</a>."},{title:"Documentation has been ported to our GitHub Wiki",paragraph:"We have deccided that the best way to provide adequate documentation is through a community maintained Wiki. We have utilities GitHub's Wiki feature for this reason. All documentation has been ported to the GitHub Wiki and we will be utilising the Wiki for documentation from now on. The documentation page on our website has been removed and our menu now links to the Wiki instead."},{title:"New release cycle",paragraph:"Our new release cycle sees Rolling Rhino Remix releasing monthly disk images instead. These disk images will see relatively little feature change, however they will compile the latest package updates as well as the latest updates from our utilities and new utilities if they are created. The next disk image release will occur on the 1st July 2022."}]},{id:"development-update-4",title:"Why we are delaying the release of our next disk image",date:"Unrecorded Date",paragraph:"We are sorry to announce but our next disk image will not release on 2022.05.21 as initially planned, instead it will recieve an additional 7 days of development and release on the 28th of May instead. The reason for this additional time is for a few reasons:<br><br>\u2022 We are now going to be providing Rolling Rhino Remix with a minimal disk image, this disk image will be based on the daily builds of Ubuntu server, and will provide users with a more Arch Linux style install, with only the base packages they will require for their system.<br>\u2022 We have a brand-new build system, known as <span class='code'>RRR-builder</span> which generates disk images. This is a departure from Cubic, which was our previous method of disk image creation. We would like the time to adequately test and fix issues in this brand new disk image builder.<br>\u2022 We have a brand new Rhino utility in the works that was designed specifically designed for Rolling Rhino Remix minimal. It will be known as <span class='code'>rhino-deinst</span> and is a Terminal User Interface desktop environment installer. It will be installed and usable on both minimal and full-desktop Rolling Rhino Remix.<br>\u2022 The disk image size has been reduced because of ZSTD compression.",sections:[{title:"What will happen to Rolling Rhino Remix from now then?",paragraph:"Not much will change. Users who still wish to have the Ubuntu-desktop preinstalled by default can use our <q>Rolling Rhino Remix - Full Desktop</q> disk image. This will provide them with the exact same experience that Rolling Rhino Remix currently has. Users who wish to use the Minimal disk image will have a slightly more difficult installation, however a system with no pre-installed desktop environment or extra packages. This is especially good for perfectionists who like to have full control over their system. Users who utilise our minimal disk image can use our new utility, <span class='code'>rhino-deinst</span>, to easily install a desktop environment."}]},{id:"development-update-3",title:"Development underway for 2022.05.21 & Rhino utilities.",date:"Unrecorded Date",paragraph:"This will be an interesting release as the disk image release will sync up to the updates released on our Rhino utilites. Below we will list the changes that are coming to Rolling Rhino Remix and our utilities.",sections:[{title:"Release 2022.05.21:",paragraph:"Development has begun on the next release. The development team have taken feedback from users and contributors to see what features users will want the most. Rolling Rhino Remix will now begin to include the latest Linux kernel by default. The mainline Linux kernel has a list of benefits and drawbacks. By default the mainline Linux kernel does not provide ZFS support, however the disk image will now also come packaged with zfs-dkms to provide the support for this. Users who already have Rolling Rhino Remix installed will have it installed on a system upgrade. The most exciting change in this release will be our brand-new wallpapers, which will provide a nicer splash of colour to the desktop and will integrate better with our new brand identity. The two new wallpapers automatically change between light and dark whenever you change your desktop theme between light and dark mode. To get a sneak peak at the new wallpapers, you can go view them on our <a href='/branding' target='_blank'>branding page</a>."},{title:"Updates to our rhino utilities:",paragraph:"Both of our Rhino utilities will get some big updates in this release cycle. Our rhino-update utility will now automatically install the latest Linux kernel, have the ability to verify Linux kernel checksums and recieve some code cleanup. Our configuration utility, <span class='code'>rhino-config</span>, will no longer have the option to support the mainline Linux kernel due to it being installed by default on all systems.<br><br>\u2022 If users would prefer to utilise the Ubuntu kernel as opposed to the mainline Linux kernel, they are able to select it in the GRUB boot menu on system startup."}]},{id:"branding",title:"Changes to our brand",date:"Unrecorded Date",paragraph:"Rhino Remix has gone through a major brand redesign before the next release. This includes brand new logos, new wallpapers and a brand-new website.<br><br>We believe that a good brand is essential for any project. Logos should be instantly recognizable and visible when small, and websites should be unique and readable. We have undergone major design changes to bring the best possible experience to Rolling Rhino Remix. Everything evolves, and Rolling Rhino Remix is no different, going through three website and brand design changes since the beginning of the project, however we have now created a brand identity which we believe encapsulates what Rolling Rhino Remix is about, while being unique and sticking to our Ubuntu roots.<br><br>We have now established a set of brand guidelines which you can view <a href='/branding' target='_blank'>here</a>. Our set of Brand Guidelines exist so that Rolling Rhino Remix is communicated with the same precision we used to create it.<br><br>We hope you enjoy these new changes to Rolling Rhino Remix, and our brand.",sections:[]},{id:"rhino-update-v130",title:"rhino-update v1.3 - Quality of life",date:"Unrecorded Date",paragraph:"Our upgrade utility, rhino-update has received its first major update in almost 12 days. These changes include some tweaks to improve our upgrade utility and general quality of life changes.<br><br>\u2022 A brand-new feature that ensures that the mainline Linux kernel is not installed twice. This was created to help save bandwidth if required. If users have a slower internet connection, running an upgrade can take a long while, especially if the same kernel is being reinstalled.<br>\u2022 An important bug fix that allows for Pacstall to be installed, rather than giving an error. Now users are able to install Pacstall onto their system once again.<br><br>To receive the latest updates, please run <span class='code'>rhino-update</span> to upgrade your system.",sections:[]},{id:"2022-05-03",title:"Release 2022.05.03",date:"May 3rd, 2022",paragraph:"After two weeks of development we are now ready to release the latest packaged version of Rolling Rhino Remix!",sections:[{title:"What's new?",paragraph:"\u2022 All packages are updated to their latest version in the repository.<br>\u2022 The rhino-config v2.0.1 binary is now included in the distribution.<br>\u2022 A separate ~/.bash_aliases file has been included in the distribution that will be updated whenever one of our aliases requires an update.<br>\u2022 Bug fixes.<br><br>If you are using an already existing installation of Rolling Rhino Remix then you will be able to upgrade to the latest version with <span class='code'>rhino-update</span>.<br><br>If you wish to download Rolling Rhino Remix with a fresh disk image then you can download it <a href='/download' target='_blank'>here</a>."}]},{id:"joining-oin",title:"Ensuring software remains free - Rolling Rhino Remix has joined the Open Inventions Network",date:"Unrecorded Date",paragraph:"Free software is crucial for software development. The goal of Rolling Rhino Remix is to provide a free, open-source operating system based on Ubuntu. That is why Rolling Rhino Remix has joined the <a href='https://openinventionnetwork.com/' target='_blank'>Open Inventions Network</a>. The Open Invention Network is a patent non-agression community that supports the freedom of Linux and Open Source software, and helps reduce the risks of patent risks. All members of the Open Invention Network sign the same agreement to cross license their Linux System patents royalty free. The Open Invention Network owns over 2.7 million patents & applications and all members also gain access to the Open Invention Network\u2019s portfolio of 350 intellectual property assets.<br><br>Many companies and projects have joined the Open Invention Network, including: Canonical, Red Hat, IBM, Suse, Phillips and Microsoft. By joining the Open Invention Network we will have access to the patents they have agreed to provide to the Network, as well as giving any project and company the ability to utilise our patents.<br><br>\u2022 <a href='https://openinventionnetwork.com/' target='_blank'>Statistics and information from the Open Inventions Network website</a>",sections:[]},{id:"development-update-2",title:"Development is underway for 2022.05.03!",date:"Unrecorded Date",paragraph:"Development has begun for the next disk image release. A lot of small changes are going into this release to create the best possible user experience. The newly packaged <span class='code'>rhino-config v2.0</span> binaries will be provided by default, along with a set of brand-new wallpapers. At the moment we are unsure whether the default wallpaper will change, but some alternatives will be provided in <span class='code'>/usr/share/backgrounds/rolling-backgrounds</span>. Other small changes such as the rest of the <span class='code'>config-v2</span> update that was pushed to <span class='code'>rhino-update</span> will also be provided by default, and all packages will be updated to their latest versions.<br><br>This is the first disk image that will be built on top of the released Jammy disk image, and so when you switch to the devel series with <span class='code'>rhino-init</span>, it will prompt an error similar to <span class='code'>E: expected Jammy but got Kinetic.</span>, This can be rectified by hitting \u201Cy\u201D (for yes) to switch the devel series to track Kinetic. Your system will still be Rolling, it just means that the development branch is now tracking the upcoming Ubuntu release.<br><br>",sections:[]},{id:"config-v2",title:"rhino-config v2.0 & rhino-update v1.2.1",date:"Unrecorded Date",paragraph:"After a couple of weeks of development, <span class='code'>rhino-config v2.0</span> has been completed. We have completely turned <span class='code'>rhino-config</span> into a command-line utility, written in Rust, with the help of our new maintainer, Wizard28. This means that support for the legacy python script will be dropping.<br><br>From now on, in order to be able to use <span class='code'>rhino-config</span> you must first update your system to pull the latest Rust binary from our repository. To do this, type <span class='code'>rhino-update</span> in your terminal. The full documentation for rhino-config has been updated and can be found <a href='https://github.com/rollingrhinoremix/docs/wiki/rhino-config' target='_blank'>here</a>.<br><br>\u2022 If you would still like an interactive script, similar to the way that rhino-config was in version v1.2, you can run <span class='code'>rhino-config enable --interactive</span> to have it walk you through the options.<br><br><span class='code'>rhino-update</span> has received a minor update, which will now download and install the latest rust binary for rhino-config. Along with this it now will install kernel 5.17.4 as opposed to 5.17.3. In order to ensure that updates are ran smoother, the .bashrc file will be replaced and all of our Rhino aliases will be moved to ~/.bash_aliases, so that we can update the bash aliases without any disruptive change to the system.",sections:[{title:"Legacy rhino-config script",paragraph:"The legacy <span class='code'>rhino-config</span> python script will still be available until the next disk image release, so that users who have not yet ran <span class='code'>rhino-update</span> will not receive any major breaking changes. The script will officially be deprecated as of 2022.05.03, and will automatically upgrade the user if they have not done so already. it is recommended that you run <span class='code'>rhino-update</span> to receive the latest change as soon as possible."}]},{id:"rhino-v120",title:"Pacstall integration - rhino-update & rhino-config v1.2",date:"Unrecorded Date",paragraph:"The Rolling Rhino Remix development team has worked closely with the development team of <a href='https://pacstall.dev/' target='_blank'>Pacstall</a> to bring their software onto our distribution. Pacstall is an AUR-inspired package manager for Ubuntu. It brings the experience of the Arch User Repository directly to Ubuntu and Ubuntu-based systems with an ever-growing number of user-maintained packages.<br><br>We have integrated, along with the help of the Pacstall development team, Pacstall directly into our Rhino utilities. Pacstall can now be enabled via <span class='code'>rhino-config</span> and all Pacstall applications can be updated via <span class='code'>rhino-update</span>.<br><br>In order to enable Pacstall onto your system please read our <a href='https://github.com/rollingrhinoremix/docs/wiki/pacstall' target='_blank'>Pacstall documentation</a>.",sections:[]},{id:"2022-04-19",title:"Release 2022.04.19 & What's to come for the future.",date:"April 19, 2022",paragraph:"After almost 3 weeks of hard work we have released the latest packaged version of Rolling Rhino Remix.",sections:[{title:"What's new?",paragraph:"\u2022 All packages have been updated to their latest versions in the Ubuntu repositories.<br>\u2022 The <a href='https://github.com/rollingrhinoremix/rhino-config' target='_blank'>rhino-config</a> utility has been created to extend the capabilities of <span class='code'>rhino-update</span>, it has the ability to purge and hold snapd from apt updates and install the mainline kernel.<br>\u2022 Bug fixes.<br>\u2022 Code refactoring<br><br>If you are using an already existing installation of Rolling Rhino Remix then you will be able to upgrade to the latest version with <span class='code'>rhino-update</span>.<br><br>\u2022 Before you update it is important to note that a bug in 2022.03.26 requires manual intervention to fix otherwise the upgrade to the latest release will not work. In order to fix this bug click <a href='/news#2022-03-26bug' target='_blank'>here</a>.<br><br>If you wish to download Rolling Rhino Remix with a fresh disk image then you can download it <a href='/download' target='_blank'>here</a>."},{title:"The future of Rolling Rhino Remix",paragraph:"This has been known for a while but all discussion and development for Rolling Rhino Remix now happens on our Discord, which you can join <a href='https://discord.gg/JMu4SYRs2n' target='_blank'>here</a>.<br><br>From this release onwards all of our utilities, such as rhino-config and rhino-update, will be updated irrsepective of disk image releases. Large-scale changes to the utilities will still receive updates on our blog page. This will allow for users to get the latest and greatest changes to Rhino without any wait.<br><br>We have updated our website, it now uses server-side Jekyll to generate the pages rather than Eleventy being ran client-side then the generated pages being uploaded to GitHub. This will allow for people to make web-pages and fix our mistakes easier as they will be in pure Markdown as opposed to HTML.<br><br>The biggest change for the future of Rolling Rhino Remix is the integration of <a href='https://pacstall.dev/' target='_blank'>Pacstall</a>. We have worked along-side the developers of Pacstall to integrate their software into our Distribution. Pacstall provides a similar experience to the <a href='https://aur.archlinux.org/' target='_blank'>AUR</a> on Ubuntu, and working along-side these developers to integrate it into our Distribution will mean that you will have a new way to install bleeding-edge software onto your system.<br><br>As always, thanks to everyone who has shown an interest in the project, and a special thank you to our <a href='/info' target='_blank'>developers & contributors</a> who have helped improve the project."}]},{id:"2022-03-26bug",title:"Bug in 2022.03.26 - Requires manual intervention",date:"Unrecorded Date",paragraph:"During the development cycle of 2022.04.14 I have noticed a bug that will affect currently existing versions of Rolling Rhino Remix (2022.03.26 is the only version released.), the bash alias that calls <span class='code'>rhino-update</span> runs the <span class='code'>update.sh</span> script as sudo, which has presented problems when we look for files in the user\u2019s home directories. Luckily you are able to easily manually patch the system yourself.<br><br>The fix is fairly straightforward, all you will need is <span class='code'>git</span> and <span class='code'>mv</span>, both of which are provided in Rolling Rhino Remix.<br><br>To apply the fix, do the following:<br>\u2022 <span class='code'>cd ~</span><br>\u2022 <span class='code'>git clone https://github.com/rollingrhinoremix/distro</span><br>\u2022 <span class='code'>mv ~/distro/.bashrc ~</span><br>\u2022 <span class='code'>mv ~/distro/.bash_aliases</span><br><br>...and there you go, the fix has been applied and you will continue getting updates from us. The next update, which releases with 2022.04.14, will work as intended if you have applied this patch.",sections:[]},{id:"development-update-1",title:"Development underway for 2022.04.14!",date:"Unrecorded Date",paragraph:"Development has gone underway for the next packaged .iso of Rolling Rhino Remix! This release won't just be a newly compiled disk image with the latest updates. We are aiming to release a new update to the Rhino utility by the time we have released 2022.04.14. The new feature, <span class='code'>rhino-config</span> will at first only support the option to configure whether you would prefer to use the mainline Linux kernel or stick with the current Ubuntu kernel with all of their optimizations however support will be extended in the future to allow for the installation of proprietary drivers and other features too.<br><br>This release has been delayed by an extra couple of days for two various reasons:<br>\u2022 Due to conflicting schedules in personal lives we have had to delay the release, as preparing for a release takes a lot of work.<br>\u2022 We are aiming to release <span class='code'>rhino-config</span> in this release and we are determined to do it.<br><br>Other changes in this future release include:<br>\u2022 Us trialing a more automated process for .iso creation using a bash script, which will allow us more time to work on other features of the distribution, such as Rhino<br>\u2022 Having the new disk images have the latest updates so users are not required to update a lot of packages upon installation.",sections:[]},{id:"2022-03-26",title:"Release 2022.03.26",date:"March 26, 2022",paragraph:"Rolling Rhino Remix has had its first official public release! Ubuntu is now (unofficially) provided as a rolling release distribution! You are able to download the .iso file for the distribution <a href='/download' target='_blank'>here</a>.<br><br>",sections:[{title:"What's new?",paragraph:"\u2022 All packages have been updated to their latest versions in the Ubuntu repository.<br>\u2022 The Rhino utility tool has been created and packaged in the distribution. Rhino is used as a drop-in replacement for <span class='code'>apt update</span> and <span class='code'>apt upgrade</span> and allows for the initialization of the distribution upon first installation. To learn more please read the <a href='https://github.com/rollingrhinoremix/docs/wiki' target='_blank'>rhino documentation</a> and Quick Start guide.<br>\u2022 We have replaced the default background with our own background image featuring our mascot, a rhino! You are able to download the background image <a href='/branding' target='_blank'>here</a>.<br><br>Furthermore Rolling Rhino is now fully open source upon its first release, if you for any reason decide to create your own disk image rather than use the ones we have created, you can. Just read our documentation and follow the steps provided <a href='https://github.com/rollingrhinoremix/docs/wiki' target='_blank'>here</a>.<br><br>Thank you to all of our contributors who have made our first release possible! You are able to view the full list of contributors <a href='/info' target='_blank'>here</a>."}]}];const Di=k('<div id="news" class="page-width"><div class="large-spacer"></div><h1 id="news-title" class="gradient">Rolling Rhino Remix - News</h1><hr class="title-hr"><div class="spacer"></div><div id="news-posts-container"></div><div class="spacer"></div></div>');var Oi="Rolling Rhino Remix | News";function Wi(){const e=t=>{t?(document.getElementById("news-post-share-popup").style.animation="news-post-share-popup-intro 0.3s",document.getElementById("news-post-share-popup").style.opacity=1,setTimeout(()=>{e(!1)},1e3)):(document.getElementById("news-post-share-popup").style.animation="news-post-share-popup-outro 0.3s",document.getElementById("news-post-share-popup").style.opacity=0)};return(()=>{const t=Di.cloneNode(!0),n=t.firstChild,i=n.nextSibling,a=i.nextSibling,o=a.nextSibling,r=o.nextSibling;return r.nextSibling,u(t,c(Y,{children:Oi}),n),u(r,c(we,{each:Ui,children:s=>c(Ai,{get propID(){return s.id},get date(){return s.date},get title(){return s.title},get paragraph(){return s.paragraph},get sections(){return s.sections},setShowingPopup:e})})),u(t,c(J,{}),null),u(t,c(Ii,{}),null),t})()}const Ei=k(`<div id="error404"><div class="large-spacer"></div><h1 class="gradient">Error 404: Page Not found</h1><hr class="title-hr"><div class="spacer"></div><h2>Are you sure you've entered the correct address?</h2><div class="mini-spacer"></div><img src="./assets/place-holder.png" alt="xxx"><div class="mini-spacer"></div><p></p><div class="spacer"></div></div>`);var ji="Rolling Rhino Remix | 404";function Bi(){return(()=>{const e=Ei.cloneNode(!0),t=e.firstChild,n=t.nextSibling,i=n.nextSibling,a=i.nextSibling,o=a.nextSibling,r=o.nextSibling,s=r.nextSibling,l=s.nextSibling,h=l.nextSibling;return h.nextSibling,u(e,c(Y,{children:ji}),t),u(h,c(U,{class:"paragraph-link",href:"/",children:"Return to Home."})),u(e,c(J,{}),null),e})()}const qi=k('<div id="app"></div>'),[Mi,ve]=M(!1);window.addEventListener("resize",()=>{window.innerHeight>window.innerWidth?ve(!1):ve(!0)});window.innerHeight>window.innerWidth?ve(!1):ve(!0);function Hi(){return c(En,{get children(){const e=qi.cloneNode(!0);return u(e,c(Un,{id:"router",get children(){return[c(G,{path:"/",get element(){return c(ki,{})}}),c(G,{path:"/download",get element(){return c(wi,{})}}),c(G,{path:"/news",get element(){return c(Wi,{})}}),c(G,{path:"/info",get element(){return c(Ni,{})}}),c(G,{path:"/donate",get element(){return c(ti,{})}}),c(G,{path:"/branding",get element(){return c(Qn,{})}}),c(G,{path:"/:id",get element(){return c(Bi,{})}})]}}),null),u(e,c(ce,{get when(){return Mi()},get fallback(){return c(Gn,{})},get children(){return c(Yn,{})}}),null),e}})}Zt(()=>c(In,{get children(){return c(Hi,{})}}),document.getElementById("root"));
